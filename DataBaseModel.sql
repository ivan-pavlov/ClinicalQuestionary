-- MySQL Script generated by MySQL Workbench
-- 03/04/17 11:03:19
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema patientcontrolDB
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema patientcontrolDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `patientcontrolDB` DEFAULT CHARACTER SET utf8 ;
USE `patientcontrolDB` ;

-- -----------------------------------------------------
-- Table `patientcontrolDB`.`doctor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patientcontrolDB`.`doctor` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `login` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `idUnique` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patientcontrolDB`.`patient`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patientcontrolDB`.`patient` (
  `id` INT NOT NULL,
  `surname` VARCHAR(45) NOT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NULL,
  `sex` VARCHAR(1) NOT NULL,
  `date_of_birth` DATE NOT NULL,
  `date_of_TGSK` DATE NOT NULL,
  `date_of_quit` DATE NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `idUnique` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patientcontrolDB`.`doctor_patient`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patientcontrolDB`.`doctor_patient` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `doc_id` INT NOT NULL,
  `pat_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `doc_idUnique` (`doc_id` ASC),
  UNIQUE INDEX `pat_idUnique` (`pat_id` ASC),
  CONSTRAINT `doc_doc_idU`
    FOREIGN KEY (`doc_id`)
    REFERENCES `patientcontrolDB`.`doctor` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `pat_pat_idU`
    FOREIGN KEY (`pat_id`)
    REFERENCES `patientcontrolDB`.`patient` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patientcontrolDB`.`questinary`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patientcontrolDB`.`questinary` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date` DATETIME NOT NULL,
  `options` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `idUnique` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patientcontrolDB`.`survey`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patientcontrolDB`.`survey` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `pat_id` INT NOT NULL,
  `quest_id` INT NOT NULL,
  `surv_date` DATETIME NOT NULL,
  `result` LONGTEXT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `quest_idUnique` (`quest_id` ASC),
  UNIQUE INDEX `pat_idUnique` (`pat_id` ASC),
  CONSTRAINT `surv_pat_idU`
    FOREIGN KEY (`pat_id`)
    REFERENCES `patientcontrolDB`.`patient` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `surv_quest_idU`
    FOREIGN KEY (`quest_id`)
    REFERENCES `patientcontrolDB`.`questinary` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patientcontrolDB`.`doc_quest`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patientcontrolDB`.`doc_quest` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `doc_id` INT NOT NULL,
  `quest_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `quest_id_UNIQUE` (`quest_id` ASC),
  UNIQUE INDEX `doc_idUnique` (`doc_id` ASC),
  CONSTRAINT `doc_id_idU`
    FOREIGN KEY (`doc_id`)
    REFERENCES `patientcontrolDB`.`doctor` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `doc_q_qU`
    FOREIGN KEY (`quest_id`)
    REFERENCES `patientcontrolDB`.`questinary` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patientcontrolDB`.`questions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patientcontrolDB`.`questions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `question` VARCHAR(45) NOT NULL,
  `score` INT NOT NULL,
  `answers` VARCHAR(45) NOT NULL,
  `answer` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `idUniqueIndex` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patientcontrolDB`.`quest_quest`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patientcontrolDB`.`quest_quest` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `anket_id` INT NOT NULL,
  `question_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `question_idUniqueIndex` (`question_id` ASC),
  UNIQUE INDEX `anket_idUniqueIndex` (`anket_id` ASC),
  CONSTRAINT `anket_id_idU`
    FOREIGN KEY (`anket_id`)
    REFERENCES `patientcontrolDB`.`questinary` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `quest_id_idU`
    FOREIGN KEY (`question_id`)
    REFERENCES `patientcontrolDB`.`questions` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
